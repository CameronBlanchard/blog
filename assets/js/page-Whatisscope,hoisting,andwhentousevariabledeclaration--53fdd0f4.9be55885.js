(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{473:function(e,t,a){"use strict";a.r(t);var i=a(2),s=Object(i.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"what-is-scope-hoisting-and-when-to-use-variable-declaration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-scope-hoisting-and-when-to-use-variable-declaration"}},[this._v("#")]),this._v(" What is scope, hoisting, and when to use variable declaration?")]),this._v(" "),t("blockquote",[t("p",[this._v("Scope is where a variable can be seen.  A variable is scoped either globally or locally.  Hoisting is where a variable or function declaration is moved to the top of it's scope before it's exection.  We use Const as a variable that's value will never change.  Var is used when it's ok for it to be redefined.  Let is block scoped and can not be redifined.  It is now the preferred vaiable declaration to avoid problems.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);